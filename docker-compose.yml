version: '3.7'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/src
      - '${LOCAL_DATA_DIR}:/src/data'
    ports:
      - 8000:8000
    environment:
      - DB_ENDPOINT=${DB_ENDPOINT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_REGION_NAME=${AWS_REGION_NAME}


    depends_on:
      - development-db

  development-db:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: development-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      DB_ENDPOINT: ${DB_ENDPOINT}
      POSTGRES_DB: app_db

    volumes:
      - '${LOCAL_DATA_DIR}/postgresql:/var/lib/postgresql/data'

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/app
    ports:
      - 3000:3000
    environment:
      - HOST=0.0.0.0
      - PORT=3000
      - NODE_ENV=development
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
    depends_on:
      - backend
